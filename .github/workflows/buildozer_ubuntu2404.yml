name: Build Kivy Android App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('**/buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
    
    - name: Update system packages
      run: |
        sudo apt-get update
        sudo apt-get upgrade -y
    
    - name: Install Python and pip
      run: |
        sudo apt-get install -y python3-pip python3-dev
    
    - name: Install build dependencies
      run: |
        sudo apt-get install -y \
          build-essential \
          git \
          make \
          autoconf \
          automake \
          libtool \
          pkg-config \
          cmake \
          ninja-build \
          libasound2-dev \
          libpulse-dev \
          libaudio-dev \
          libjack-dev \
          libsndio-dev \
          libsamplerate0-dev \
          libx11-dev \
          libxext-dev \
          libxrandr-dev \
          libxcursor-dev \
          libxfixes-dev \
          libxi-dev \
          libxss-dev \
          libwayland-dev \
          libxkbcommon-dev \
          libdrm-dev \
          libgbm-dev \
          libgl1-mesa-dev \
          libgles2-mesa-dev \
          libegl1-mesa-dev \
          libdbus-1-dev \
          libibus-1.0-dev \
          libudev-dev \
          fcitx-libs-dev
    
    - name: Install Kivy dependencies
      run: |
        sudo add-apt-repository ppa:kivy-team/kivy -y
        sudo apt-get update
        sudo apt-get install -y python3-kivy
    
    - name: Fix Python externally-managed error
      run: |
        sudo rm -f /usr/lib/python*/EXTERNALLY-MANAGED
    
    - name: Install libtinfo5 for compatibility
      run: |
        wget http://launchpadlibrarian.net/371711898/libtinfo5_6.1-1ubuntu1.18.04_amd64.deb
        sudo dpkg -i libtinfo5_6.1-1ubuntu1.18.04_amd64.deb || true
        sudo apt-get install -f -y
    
    - name: Install additional build tools
      run: |
        sudo apt-get install -y \
          git \
          libssl-dev \
          cython3 \
          zip \
          unzip \
          openjdk-17-jdk \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          cmake \
          libffi-dev
    
    - name: Set up Java environment
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
        echo "/usr/lib/jvm/java-17-openjdk-amd64/bin" >> $GITHUB_PATH
    
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Install Android SDK components
      run: |
        sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"
        sdkmanager "ndk;21.4.7075529"
    
    - name: Set Android environment variables
      run: |
        echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "NDK_PATH=$ANDROID_SDK_ROOT/ndk/21.4.7075529" >> $GITHUB_ENV
    
    - name: Install Python packages
      run: |
        python3 -m pip install --upgrade pip
        pip3 install --user --upgrade Cython==0.29.33 virtualenv
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Clone and install Buildozer
      run: |
        git clone https://github.com/kivy/buildozer.git
        cd buildozer
        python3 setup.py install --user
    
    - name: Verify Buildozer installation
      run: |
        buildozer --version
    
    - name: Initialize Buildozer (if buildozer.spec doesn't exist)
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi
    
    - name: Configure buildozer.spec for GitHub Actions
      run: |
        # Update buildozer.spec with proper Android SDK paths
        if [ -f buildozer.spec ]; then
          sed -i "s|#android.sdk_path =|android.sdk_path = $ANDROID_SDK_ROOT|g" buildozer.spec
          sed -i "s|#android.ndk_path =|android.ndk_path = $ANDROID_SDK_ROOT/ndk/21.4.7075529|g" buildozer.spec
          sed -i "s|#android.api =|android.api = 33|g" buildozer.spec
          sed -i "s|#android.minapi =|android.minapi = 21|g" buildozer.spec
          sed -i "s|#android.ndk =|android.ndk = 21.4.7075529|g" buildozer.spec
          sed -i "s|#android.accept_sdk_license =|android.accept_sdk_license = True|g" buildozer.spec
        fi
    
    - name: Build Android APK
      run: |
        buildozer android debug
      env:
        BUILDOZER_LOG_LEVEL: 2
        ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
    
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*.apk
        retention-days: 30
    
    - name: Upload build logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          .buildozer/logs/
          *.log
        retention-days: 7
